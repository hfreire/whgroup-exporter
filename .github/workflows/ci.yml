name: ci

on: [push]

jobs:
  test-code:

    runs-on: ubuntu-latest

    env:
      NODE_VERSION: 16.13.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install NPM dependencies
        run: npm ci

      - name: Build source code
        run: npm run build --if-present

      - name: Test source code
        run: npm test

      - name: Cache coverage
        uses: actions/cache@v3
        env:
          cache-name: cache-coverage
        with:
          path: coverage
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

  test-docker-image:

    runs-on: ubuntu-latest

    steps:
      - name: Set additional environment variables
        run: |
          echo "NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "VERSION_COMMIT=${GITHUB_SHA::8}" >> $GITHUB_ENV
          echo "VERSION_BUILD_DATE=$(date)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          file: ./share/docker/Dockerfile
          context: .
          load: true
          platforms: linux/amd64
          tags: ${{ env.VERSION_COMMIT }}
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
            NAME=${{ env.NAME }}
            VERSION=${{ env.VERSION }}
            VERSION_COMMIT=${{ env.VERSION_COMMIT }}
            VERSION_BUILD_DATE=${{ env.VERSION_BUILD_DATE }}

      - name: Test Docker image
        run: |
          docker run --rm --entrypoint "./test.sh" ${{ env.VERSION_COMMIT }}

  submit-test-coverage:

    needs: [test-code, test-docker-image]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Cache coverage
        uses: actions/cache@v3
        env:
          cache-name: cache-coverage
        with:
          path: coverage
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: Submit coveralls test coverage report
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  create-github-release:

    needs: [test-code, test-docker-image]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Check if release should be created
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
